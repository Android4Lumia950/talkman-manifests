libra has tee broken so we use the old patch
From fb859fcac209213303c8a46fa006a10255b5c571 Mon Sep 17 00:00:00 2001
From: minaripenguin <minaripenguin@users.noreply.github.com>
Date: Fri, 1 Dec 2023 17:16:44 +0800
Subject: [PATCH] Keystore: Spoof locked bootloader on local attestations

based from: https://github.com/chiteroman/BootloaderSpoofer

Squashed:

    From: minaripenguin <minaripenguin@users.noreply.github.com>
    Date: Tue, 5 Dec 2023 19:56:07 +0800
    Subject: fixup! Keystore: Spoof locked bootloader on local attestations

    * as reported by sir shamik without this fixup, bootloader is detected as unlocked on keystore attestation app.
    * thanks to ghostrider-reborn for the references and clarification about the injection

    reference: https://github.com/RisingTechOSS/android_frameworks_base/commit/d57f22f7d99a29ce860d7113d78eb8122a8b7816#r134217184

    test: m confirmed that key attestation 1.5.0 detects device bootloader state as locked

    Signed-off-by: minaripenguin <minaripenguin@users.noreply.github.com>

Co-authored-by: chiteroman <98092901+chiteroman@users.noreply.github.com>
Signed-off-by: minaripenguin <minaripenguin@users.noreply.github.com>
Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>
---
 .../keystore2/AndroidKeyStoreSpi.java         | 40 +++++++++++++++----
 1 file changed, 33 insertions(+), 7 deletions(-)

diff --git a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
index 36da03ad1ec94..3c58245c537f5 100644
--- a/frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java	2025-04-23 09:32:59.599726858 +0800
+++ b/frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java	2025-04-27 15:11:38.755736011 +0800
@@ -73,6 +73,7 @@
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 import java.util.Set;
 
 import javax.crypto.SecretKey;
@@ -162,6 +163,20 @@
         }
     }
 
+    private static int indexOf(byte[] array) {
+        final byte[] PATTERN = {48, 74, 4, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 10, 1, 2};
+        outer:
+        for (int i = 0; i < array.length - PATTERN.length + 1; i++) {
+            for (int j = 0; j < PATTERN.length; j++) {
+                if (array[i + j] != PATTERN[j]) {
+                    continue outer;
+                }
+            }
+            return i;
+        }
+        return -1;
+    }
+
     @Override
     public Certificate[] engineGetCertificateChain(String alias) {
         KeyEntryResponse response = getKeyMetadata(alias);
@@ -175,15 +190,28 @@
             return null;
         }
 
-        final Certificate[] caList;
+        X509Certificate modLeaf = leaf;
+        try {
+            byte[] bytes = leaf.getEncoded();
+            if (bytes != null && bytes.length > 0) {
+                int index = indexOf(bytes);
+                if (index != -1) {
+                    bytes[index + 38] = 1;
+                    bytes[index + 41] = 0;
+                    CertificateFactory certFactory = CertificateFactory.getInstance("X.509");
+                    X509Certificate modCert = (X509Certificate) certFactory.generateCertificate(new ByteArrayInputStream(bytes));
+                    modLeaf = modCert;
+                }
+            }
+        } catch (CertificateException e) {
+            return null;
+        }
 
         final byte[] caBytes = response.metadata.certificateChain;
-
+        final Certificate[] caList;
         if (caBytes != null) {
             final Collection<X509Certificate> caChain = toCertificates(caBytes);
-
             caList = new Certificate[caChain.size() + 1];
-
             final Iterator<X509Certificate> it = caChain.iterator();
             int i = 1;
             while (it.hasNext()) {
@@ -192,9 +220,7 @@
         } else {
             caList = new Certificate[1];
         }
-
-        caList[0] = leaf;
-
+        caList[0] = modLeaf;
         return caList;
     }
 
